@model EventB.ViewModels.FriendsVM.FriendsListVM
@{
    ViewData["Style"] = "Friends.css";
    ViewData["Script"] = "Friends.js";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Друзья";
}

<div class="top-page-header flex-hsbs flex-wr">
    <span>Ваши друзья</span>
    <div class="flex-hcc">
        <svg class="fr-new-star display-none" xmlns="http://www.w3.org/2000/svg" enable-background="new 0 0 24 24" height="24px" viewBox="0 0 24 24" width="24px" fill="#1b5972"><g><rect fill="none" height="24" width="24" /><path d="M14.43,10l-1.47-4.84c-0.29-0.95-1.63-0.95-1.91,0L9.57,10H5.12c-0.97,0-1.37,1.25-0.58,1.81l3.64,2.6l-1.43,4.61 c-0.29,0.93,0.79,1.68,1.56,1.09L12,17.31l3.69,2.81c0.77,0.59,1.85-0.16,1.56-1.09l-1.43-4.61l3.64-2.6 c0.79-0.57,0.39-1.81-0.58-1.81H14.43z" /></g></svg>        
        <span class="orders">Заявки</span>
    </div>

</div>
<div id="friend-banner"></div>

@{await Html.RenderPartialAsync("~/Views/Friends/Partials/_SearchForm.cshtml", Model.SearchParam);}

<div class="s-filter-container">
    <span class="small-label">Фильтр</span>
    <div class="flex-hsbc">
        <input id="fr-filter" class="s-filter" autocomplete="off"/>
        <img src="~/resourses/cancel.png" class="s-filter-clear" />
    </div>
   
</div>

<div class="fr-current-friends">
    @foreach (var item in Model.Friends.OrderByDescending(e=> (!e.IsConfirmed && !e.FriendInitiator)))
    {
        if (item.IsBlocked && !item.BlockInitiator)
            continue;

        await Html.RenderPartialAsync("~/Views/Shared/_friendBigCardPartial.cshtml", item);

    }
</div>
<div class="fr-search-list display-none"></div>

<div class="margintop05em">
    @{ await Html.RenderPartialAsync("_SiteFooter"); }
</div>




