@model EventBLib.Models.Event
@{
    ViewData["Title"] = "Details";
    ViewData["Style"] = "Event.css";
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "детали";
}
<div class="top-page-header">Описание события</div>

<!--ИЗОБРАЖЕНИЕ-->
<div class="detail-main-line">
    <div class="ev-big-img">
        <div class="image-container">
            <img src="@($"{Model.Image}?{DateTime.Now.Millisecond.ToString()}")" class="image-self-back" />
            <img src="@($"{Model.Image}?{DateTime.Now.Millisecond.ToString()}")" class="image-self-front" />
        </div>
    </div>
    <!--детали системные-->
    <div class="dot16px"></div>
    <div class="ev-big-desc">
        <h2>@Model.Title</h2>
        <div class="dot16px"></div>
        <div class="flex-hsc"><span class="material-icons eve-icons">calendar_today</span> <div>@Model.Date.ToString("dd.MM.yyyy HH:mm")</div></div>
        <div class="flex-hsc"><span class="material-icons eve-icons">location_on</span> <div>@Model.City @Model.Place</div></div>
        @if (!string.IsNullOrWhiteSpace(Model.Phone))
        {
            <div class="flex-hsc"><span class="material-icons eve-icons">phone_iphone</span> <div>@Model.Phone</div></div>
        }
        
    </div>
</div>


<!--детали Оипсние-->
<div class="item-container">
    <div class="dot16px"></div>
    <p class="formatted-body">@Model.Body</p>
    <div class="dot16px"></div>
    @if (Model.Tickets)
    {
        <p class="formatted-body"><span>Билеты:</span> @Model.TicketsDesc</p>
    }
    <div class="dot16px"></div>
    <div class="ev-teg-placeholder">
        @foreach (var teg in Model.EventTegs)
        {
            var tegData = new EventB.ViewModels.SharedViews.TegColoredLink()
            {
                TegValue = teg.Teg,
                City = Model.City
            };
            await Html.RenderPartialAsync("~/Views/Shared/_tegColoredLink.cshtml", tegData);
        }
    </div>
    <div class="dot16px"></div>
    @if (Model.AgeRestrictions != 0)
    {
        <p>Возрастные ограничения: @Model.AgeRestString</p>
    }
    <p>Автор: <a href="/Friends/UserInfo?userId=@Model.Creator.Id">@Model.Creator.Name</a></p>
    <div class="dot16px"></div>
    <div id="come-block">
        @if (Model.Vizits.Where(e => e.UserId == ViewData["UserId"].ToString()).Any())
        {
            <div class="bold-label">Вы пойдете</div>
            <div id="btn-come" class="form-search-fade">Отменить участие</div>
        }
        else
        {
            <div class="bold-label display-none">Вы пойдете</div>
            <div id="btn-come" class="form-submit">Подтвердить участие</div>
        }
    </div>

    <div id="btn-invite" class="form-submit">Пригласить на это событие</div>
    <div id="btn-details-send-link" class="form-submit">Отправить ссылку на событие</div>
</div>

<div class="bottom-menu">
    <span class="bottom-menu-item bottom-menu-item-selected" id="btn-changes">Изменения</span>
    <span class="bottom-menu-item" id="btn-chat">Комментарии</span>
    <span class="bottom-menu-item" id="btn-vizitors">Участники(@Model.Vizits.Count())</span>

</div>

<div class="bottom-body">
    <!--Изменения-->
    <div class="bottom-page" id="ed-changes">
        Загрузка...
    </div>

    <!--чат-->
    <div class="bottom-page display-none" id="chat">
        <form>

            <input type="hidden" id="user-id" value="@ViewData["UserId"]" />
            <input type="hidden" id="user-name" value="@ViewData["UserName"]" />
            <input type="hidden" id="event-id" value="@Model.EventId" />
            <input type="hidden" id="chat-id" value="@Model.Chat.ChatId" />
            @if (Model.Chat.UserChat.Count > 0 && !Model.Chat.UserChat[0].IsBlockedInChat)
            {
                <label>Сообщение</label><br>
                <textarea id="text"></textarea>
                <button type="submit" id="btn-send">Отправить</button>
            }
        </form>
        <div class="ed-message-list">
            Загрузка...
        </div>
    </div>

    <!-- посетители-->
    <div class="bottom-page display-none" id="vizitors">
        <div class="flex-hsac flex-wr">
            @foreach (var e in Model.Vizits)
            {
                await Html.RenderPartialAsync("_smallFigure", new EventB.ViewModels.SmallFigure()
                {
                    Title = e.VizitorName,
                    Link = $"/Friends/UserInfo?userId={e.UserId}",
                    Image = e.VizitirPhoto
                });
            }
        </div>
    </div>
</div>


@{ViewData["Script"] = "Event.js";
}
